{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Library/WebServer/Documents/moneyball/app/web/pages/charts/points-per-price.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from \"react\";\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\nimport dataAll from \"../../../../data/data-all.json\";\nvar data = dataAll.overallData;\n\nvar CustomTooltip = function CustomTooltip(_ref) {\n  var active = _ref.active,\n      payload = _ref.payload,\n      label = _ref.label;\n\n  if (active) {\n    /* tslint:disable no-console */\n    console.log(payload);\n\n    var _payload = _slicedToArray(payload, 1),\n        _payload$ = _payload[0],\n        name = _payload$.name,\n        team = _payload$.team;\n\n    return __jsx(\"div\", {\n      className: \"custom-tooltip\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      className: \"label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \"Name : \".concat(name)), __jsx(\"p\", {\n      className: \"label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, \"Team : \".concat(team)));\n  }\n\n  return null;\n};\n\n_c = CustomTooltip;\n\nvar Example = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Example, _PureComponent);\n\n  var _super = _createSuper(Example);\n\n  function Example() {\n    _classCallCheck(this, Example);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(ScatterChart, {\n        width: 900,\n        height: 900,\n        margin: {\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, __jsx(CartesianGrid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }), __jsx(XAxis, {\n        type: \"number\",\n        dataKey: \"points\",\n        name: \"points\",\n        unit: \"point\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }), __jsx(YAxis, {\n        type: \"number\",\n        dataKey: \"price\",\n        name: \"price\",\n        unit: \"price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }), __jsx(Tooltip, {\n        content: __jsx(CustomTooltip, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 27\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }), __jsx(Scatter, {\n        name: \"Points per round\",\n        data: data,\n        fill: \"#8884d8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Example;\n}(PureComponent);\n\nexport { Example as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTooltip\");","map":{"version":3,"sources":["/Library/WebServer/Documents/moneyball/app/web/pages/charts/points-per-price.tsx"],"names":["React","PureComponent","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","dataAll","data","overallData","CustomTooltip","active","payload","label","console","log","name","team","Example","top","right","bottom","left"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuCC,KAAvC,EAA8CC,aAA9C,EAA6DC,OAA7D,QAA4E,UAA5E;AAKA,OAAOC,OAAP,MAAoB,gCAApB;AAEA,IAAMC,IAAI,GAAGD,OAAO,CAACE,WAArB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAgC;AAAA,MAA7BC,MAA6B,QAA7BA,MAA6B;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AACpD,MAAIF,MAAJ,EAAY;AACV;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AAFU,kCAGeA,OAHf;AAAA;AAAA,QAGDI,IAHC,aAGDA,IAHC;AAAA,QAGKC,IAHL,aAGKA,IAHL;;AAKV,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgCD,IAAhC,EADF,EAEE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgCC,IAAhC,EAFF,CADF;AAMD;;AAED,SAAO,IAAP;AACD,CAfD;;KAAMP,a;;IAiBeQ,O;;;;;;;;;;;;;6BACV;AACP,aACE,MAAC,YAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,MAAM,EAAE;AACNC,UAAAA,GAAG,EAAE,EADC;AAENC,UAAAA,KAAK,EAAE,EAFD;AAGNC,UAAAA,MAAM,EAAE,EAHF;AAINC,UAAAA,IAAI,EAAE;AAJA,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAWE,MAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAC,QAA7B;AAAsC,QAAA,IAAI,EAAC,QAA3C;AAAoD,QAAA,IAAI,EAAC,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAYE,MAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAC,OAA7B;AAAqC,QAAA,IAAI,EAAC,OAA1C;AAAkD,QAAA,IAAI,EAAC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAaE,MAAC,OAAD;AAAS,QAAA,OAAO,EAAE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAcE,MAAC,OAAD;AAAS,QAAA,IAAI,EAAC,kBAAd;AAAiC,QAAA,IAAI,EAAEd,IAAvC;AAA6C,QAAA,IAAI,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CADF;AAkBD;;;;EApBkCR,a;;SAAhBkB,O","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\nimport { flatten } from \"lodash\";\n\nimport { Player, RankedPlayer } from \"../../../types\";\n\nimport dataAll from \"../../../../data/data-all.json\";\n\nconst data = dataAll.overallData;\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active) {\n    /* tslint:disable no-console */\n    console.log(payload);\n    const [{ name, team }] = payload;\n\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"label\">{`Name : ${name}`}</p>\n        <p className=\"label\">{`Team : ${team}`}</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default class Example extends PureComponent {\n  render() {\n    return (\n      <ScatterChart\n        width={900}\n        height={900}\n        margin={{\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 20,\n        }}\n      >\n        <CartesianGrid />\n        <XAxis type=\"number\" dataKey=\"points\" name=\"points\" unit=\"point\" />\n        <YAxis type=\"number\" dataKey=\"price\" name=\"price\" unit=\"price\" />\n        <Tooltip content={<CustomTooltip />} />\n        <Scatter name=\"Points per round\" data={data} fill=\"#8884d8\" />\n      </ScatterChart>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}