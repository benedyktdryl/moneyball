{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Library/WebServer/Documents/moneyball/app/web/pages/charts/points-per-round.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from \"react\";\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\nimport dataAll from \"../../../../data/data-all.json\"; // const data = [\n//   { x: 100, y: 200, z: 200 },\n//   { x: 120, y: 100, z: 260 },\n//   { x: 170, y: 300, z: 400 },\n//   { x: 140, y: 250, z: 280 },\n//   { x: 150, y: 400, z: 500 },\n//   { x: 110, y: 280, z: 200 },\n// ];\n\nvar data = dataAll.perRoundData.map(function (item, index) {\n  return {\n    x: item.points,\n    y: index + 1\n  };\n});\n\nvar Example = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Example, _PureComponent);\n\n  var _super = _createSuper(Example);\n\n  function Example() {\n    _classCallCheck(this, Example);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(ScatterChart, {\n        width: 900,\n        height: 900,\n        margin: {\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, __jsx(CartesianGrid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }), __jsx(XAxis, {\n        type: \"number\",\n        dataKey: \"x\",\n        name: \"points\",\n        unit: \"point\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }), __jsx(YAxis, {\n        type: \"number\",\n        dataKey: \"y\",\n        name: \"rounds\",\n        unit: \"round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }), __jsx(Tooltip, {\n        cursor: {\n          strokeDasharray: \"3 3\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }), __jsx(Scatter, {\n        name: \"Points per round\",\n        data: data,\n        fill: \"#8884d8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Example;\n}(PureComponent);\n\nexport { Example as default };","map":{"version":3,"sources":["/Library/WebServer/Documents/moneyball/app/web/pages/charts/points-per-round.tsx"],"names":["React","PureComponent","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","dataAll","data","perRoundData","map","item","index","x","points","y","Example","top","right","bottom","left","strokeDasharray"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuCC,KAAvC,EAA8CC,aAA9C,EAA6DC,OAA7D,QAA4E,UAA5E;AAIA,OAAOC,OAAP,MAAoB,gCAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,IAAI,GAAGD,OAAO,CAACE,YAAR,CAAqBC,GAArB,CAAyB,UAACC,IAAD,EAAqBC,KAArB;AAAA,SAAwC;AAC5EC,IAAAA,CAAC,EAAEF,IAAI,CAACG,MADoE;AAE5EC,IAAAA,CAAC,EAAEH,KAAK,GAAG;AAFiE,GAAxC;AAAA,CAAzB,CAAb;;IAKqBI,O;;;;;;;;;;;;;6BACV;AACP,aACE,MAAC,YAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,MAAM,EAAE;AACNC,UAAAA,GAAG,EAAE,EADC;AAENC,UAAAA,KAAK,EAAE,EAFD;AAGNC,UAAAA,MAAM,EAAE,EAHF;AAINC,UAAAA,IAAI,EAAE;AAJA,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAWE,MAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAC,GAA7B;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAA+C,QAAA,IAAI,EAAC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAYE,MAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAC,GAA7B;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAA+C,QAAA,IAAI,EAAC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAaE,MAAC,OAAD;AAAS,QAAA,MAAM,EAAE;AAAEC,UAAAA,eAAe,EAAE;AAAnB,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAcE,MAAC,OAAD;AAAS,QAAA,IAAI,EAAC,kBAAd;AAAiC,QAAA,IAAI,EAAEb,IAAvC;AAA6C,QAAA,IAAI,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CADF;AAkBD;;;;EApBkCR,a;;SAAhBgB,O","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\n\nimport { Player, RankedPlayer } from \"../../../types\";\n\nimport dataAll from \"../../../../data/data-all.json\";\n\n// const data = [\n//   { x: 100, y: 200, z: 200 },\n//   { x: 120, y: 100, z: 260 },\n//   { x: 170, y: 300, z: 400 },\n//   { x: 140, y: 250, z: 280 },\n//   { x: 150, y: 400, z: 500 },\n//   { x: 110, y: 280, z: 200 },\n// ];\n\nconst data = dataAll.perRoundData.map((item: RankedPlayer, index: number) => ({\n  x: item.points,\n  y: index + 1,\n}));\n\nexport default class Example extends PureComponent {\n  render() {\n    return (\n      <ScatterChart\n        width={900}\n        height={900}\n        margin={{\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 20,\n        }}\n      >\n        <CartesianGrid />\n        <XAxis type=\"number\" dataKey=\"x\" name=\"points\" unit=\"point\" />\n        <YAxis type=\"number\" dataKey=\"y\" name=\"rounds\" unit=\"round\" />\n        <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n        <Scatter name=\"Points per round\" data={data} fill=\"#8884d8\" />\n      </ScatterChart>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}