{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from \"react\";\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\nimport { flatten } from \"lodash\";\nimport dataAll from \"../../../../data/data-all.json\";\nvar data = flatten(dataAll.all.map(function (round, index) {\n  return round.map(function (item) {\n    return {\n      x: index + 1,\n      y: item.points\n    };\n  });\n}));\n/* tslint:disable no-console */\n\nconsole.log(data);\n\nvar Example = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Example, _PureComponent);\n\n  var _super = _createSuper(Example);\n\n  function Example() {\n    _classCallCheck(this, Example);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(ScatterChart, {\n        width: 900,\n        height: 900,\n        margin: {\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 20\n        }\n      }, __jsx(CartesianGrid, null), __jsx(XAxis, {\n        type: \"number\",\n        dataKey: \"x\",\n        name: \"rounds\",\n        unit: \"round\"\n      }), __jsx(YAxis, {\n        type: \"number\",\n        dataKey: \"y\",\n        name: \"points\",\n        unit: \"point\"\n      }), __jsx(Tooltip, {\n        cursor: {\n          strokeDasharray: \"3 3\"\n        }\n      }), __jsx(Scatter, {\n        name: \"Points per round\",\n        data: data,\n        fill: \"#8884d8\"\n      }));\n    }\n  }]);\n\n  return Example;\n}(PureComponent);\n\nexport { Example as default };","map":null,"metadata":{},"sourceType":"module"}